# build
FROM node:13.10.1-alpine as build-react
WORKDIR /app
RUN apk update && apk upgrade && \
  apk add --no-cache bash git openssh

# production
FROM nginx:stable-alpine as production
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV FLASK_ENV=production
ENV APP_SETTINGS=project.config.ProductionConfig
ARG NO_REPLY_PASSWORD
ENV NO_REPLY_PASSWORD $NO_REPLY_PASSWORD

WORKDIR /app
RUN apk update && \
  apk add --no-cache --virtual build-deps \
  openssl-dev libffi-dev gcc python3-dev musl-dev \
  postgresql-dev netcat-openbsd
RUN python3 -m ensurepip && \
  rm -r /usr/lib/python*/ensurepip && \
  pip3 install --upgrade pip setuptools && \
  if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \
  if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \
  rm -r /root/.cache
COPY ./services/users/requirements.txt ./
RUN pip install -r requirements.txt
RUN pip install gunicorn
COPY ./services/users .
COPY ./services/nginx/default.conf /etc/nginx/conf.d/default.conf
CMD gunicorn -b 0.0.0.0:5000 manage:app --daemon && \
  sed -i -e 's/$PORT/'"$PORT"'/g' /etc/nginx/conf.d/default.conf && \
  nginx -g 'daemon off;'